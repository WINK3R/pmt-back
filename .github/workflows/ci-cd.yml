name: Backend CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  IMAGE_NAME: ${{ vars.IMAGE_NAMESPACE || github.repository_owner }}/pmt-backend

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      # --- Tests + JaCoCo en une passe ---
      - name: Tests + JaCoCo
        run: ./mvnw -B -Dspring.profiles.active=test -Djacoco.skip=false clean verify jacoco:report

      - name: Check jacoco.xml exists and not empty
        shell: bash
        run: |
          XML=target/site/jacoco/jacoco.xml
          if [ ! -s "$XML" ]; then
            echo "jacoco.xml manquant ou vide: $XML" >&2
            ls -lah target/site || true
            exit 1
          fi

      # === Tableau résumé des tests (table only) ===
      - name: Job Summary - Tests table only
        if: always()
        shell: bash
        run: |
          set -eo pipefail
          shopt -s globstar nullglob
          files=( **/target/surefire-reports/TEST-*.xml )
          echo "### Tests Summary" >> $GITHUB_STEP_SUMMARY
          total=0; failures=0; errors=0; skipped=0; time=0
          for f in "${files[@]}"; do
            t=$(grep -o 'tests="[0-9]\+"'     "$f" | head -1 | tr -cd '0-9'); total=$(( total + t ))
            fa=$(grep -o 'failures="[0-9]\+"'  "$f" | head -1 | tr -cd '0-9'); failures=$(( failures + fa ))
            er=$(grep -o 'errors="[0-9]\+"'    "$f" | head -1 | tr -cd '0-9'); errors=$(( errors + er ))
            sk=$(grep -o 'skipped="[0-9]\+"'   "$f" | head -1 | tr -cd '0-9'); skipped=$(( skipped + sk ))
            ti=$(grep -o 'time="[^"]\+"' "$f" | head -1 | sed -E 's/time="([^"]+)"/\1/'); \
            time=$(awk -v a="$time" -v b="${ti:-0}" 'BEGIN{printf "%.3f", a+b}')
          done
          passed=$(( total - failures - errors - skipped ))
          {
            echo ""
            echo "| Total | Passed | Failed | Errors | Skipped | Time (s) |"
            echo "|-----:|------:|------:|------:|-------:|--------:|"
            echo "| $total | $passed | $failures | $errors | $skipped | $time |"
          } >> $GITHUB_STEP_SUMMARY

      # === Couverture: Branches & Instructions (seuil 60%) ===
      - name: Coverage Summary - Branches & Instructions
        if: always()
        shell: bash
        run: |
          set -e
          XML="target/site/jacoco/jacoco.xml"
          get_cov () {
            local TYPE="$1"
            read MISSED COVERED < <(grep -o "type=\"$TYPE\"[^>]*/>" "$XML" | \
              sed -E 's/.*missed="([0-9]+)".*covered="([0-9]+)".*/\1 \2/' | \
              awk '{m+=$1;c+=$2} END {print (m?m:0), (c?c:0)}')
            local TOTAL=$((MISSED + COVERED))
            if [ "$TOTAL" -eq 0 ]; then
              echo "100 0 0 0"
            else
              local PCT=$(( 100 * COVERED / TOTAL ))
              echo "$PCT $COVERED $MISSED $TOTAL"
            fi
          }
          read BR_PCT BR_C BR_M BR_T < <(get_cov "BRANCH")
          read IN_PCT IN_C IN_M IN_T < <(get_cov "INSTRUCTION")

          echo "### Coverage (Branches & Instructions)" >> $GITHUB_STEP_SUMMARY
          {
            echo ""
            echo "| Metric        | % | Covered | Missed | Total |"
            echo "|---------------|--:|--------:|-------:|------:|"
            echo "| **Branches**      | ${BR_PCT}% | ${BR_C} | ${BR_M} | ${BR_T} |"
            echo "| **Instructions**  | ${IN_PCT}% | ${IN_C} | ${IN_M} | ${IN_T} |"
          } >> $GITHUB_STEP_SUMMARY

          FAIL=0
          [ "$BR_PCT" -lt 60 ] && echo "Branches < 60%" && FAIL=1
          [ "$IN_PCT" -lt 60 ] && echo "Instructions < 60%" && FAIL=1
          [ "$FAIL" -eq 0 ] || exit 1

      - name: Upload JaCoCo HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jacoco-html
          path: target/site/jacoco/

      # --- Build & Push Docker image ---
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          echo "sha_tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "version_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

      - name: Tag & push version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker pull ${{ env.IMAGE_NAME }}:latest
          docker tag  ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version_tag }}
          docker push ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version_tag }}
